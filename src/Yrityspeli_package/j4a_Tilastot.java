/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Yrityspeli_package;

import static Yrityspeli_package.j2a_Uusi_peli.jd;
import static Yrityspeli_package.j3_Paaikkuna.compCoords;
import java.awt.Color;
import java.awt.Font;
import java.awt.Point;
import java.awt.event.KeyEvent;
import java.awt.event.MouseEvent;
import java.awt.event.MouseListener;
import java.awt.event.MouseMotionListener;
import java.awt.font.TextAttribute;
import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.Map;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.BorderFactory;
import javax.swing.UIManager;

/**
 * @author Niko L. & Timo K. Dat16A
 * Ota yhteyttä jos tarvitset lisätietoja
 * brandis.palaute@gmail.com
 * Copyright ©Brandis, All rights reserved
 */
public class j4a_Tilastot extends javax.swing.JFrame {
    private String YRNIM;
    private double maxpaiva = 0.0;
    private double minpaiva = 1.2018;
    private int pvamaara = 0;
    private double pvanum = 0.0;
    public j3_Paaikkuna j;
		private j4a_Tilastot ji;
    private Point compCoords;		
    
    /**
     * Creates new form j4e_Tilastot
     */
    public j4a_Tilastot() {
       
        initComponents();
        TAKAISINBTN.setForeground(Color.BLACK);
        ETEENPAINBTN.setForeground(Color.BLACK);
    }
    j4a_Tilastot(String nimi) throws ClassNotFoundException, SQLException{
         UIManager.put("Button.foreground", Color.BLACK);
        initComponents();
        this.YRNIM= nimi;
        this.getContentPane().setBackground(Color.WHITE);
        paivita();
    }
     j4a_Tilastot(String nimi, j3_Paaikkuna aThis) throws ClassNotFoundException, SQLException{
         UIManager.put("Button.foreground", Color.BLACK);
         initComponents();
        this.YRNIM= nimi;
        this.j = aThis;
				 this.getRootPane().setBorder(BorderFactory.createLineBorder(new Color(12, 143, 222)));		
        this.getContentPane().setBackground(Color.WHITE);
        paivita();
       
        
        
        
				 this.ji = this;
					Palkki();
								
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        KASSA = new javax.swing.JLabel();
        KASSALB = new javax.swing.JLabel();
        OKBTN = new javax.swing.JButton();
        YlaPalkki = new javax.swing.JPanel();
        NYK = new javax.swing.JLabel();
        PVLB = new javax.swing.JLabel();
        ETEENPAINBTN = new javax.swing.JButton();
        TAKAISINBTN = new javax.swing.JButton();
        MATERIAALITJAPALVELUTLB = new javax.swing.JLabel();
        HENKILOSTOKULUTLB = new javax.swing.JLabel();
        MUUTKULUTLB = new javax.swing.JLabel();
        RAHOITUSKULUTLB = new javax.swing.JLabel();
        RAHOITUSKULUT = new javax.swing.JLabel();
        LIIKEVAIHTO = new javax.swing.JLabel();
        HENKILOSTOKULUT = new javax.swing.JLabel();
        MATERIAALITJAPALVELUT = new javax.swing.JLabel();
        MUUTKULUT = new javax.swing.JLabel();
        LIIKEVAIHTOLB = new javax.swing.JLabel();
        LAINANPAAOMALB = new javax.swing.JLabel();
        LAINANPAAOMA = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        TULOS = new javax.swing.JTextArea();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setBackground(new java.awt.Color(76, 181, 245));
        setMinimumSize(new java.awt.Dimension(522, 385));
        setUndecorated(true);
        setResizable(false);
        setSize(new java.awt.Dimension(522, 385));
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        KASSA.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        getContentPane().add(KASSA, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 260, 90, 30));

        KASSALB.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        KASSALB.setText("Kassa:");
        getContentPane().add(KASSALB, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 260, 40, 30));

        OKBTN.setBackground(new java.awt.Color(76, 181, 245));
        OKBTN.setText("OK");
        OKBTN.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                OKBTNActionPerformed(evt);
            }
        });
        getContentPane().add(OKBTN, new org.netbeans.lib.awtextra.AbsoluteConstraints(370, 340, 150, 40));

        YlaPalkki.setBackground(new java.awt.Color(76, 181, 245));
        YlaPalkki.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                YlaPalkkiKeyPressed(evt);
            }
        });
        YlaPalkki.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        NYK.setForeground(new java.awt.Color(255, 255, 255));
        NYK.setText("jLabel2");
        YlaPalkki.add(NYK, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 0, 144, 18));

        PVLB.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        PVLB.setForeground(new java.awt.Color(255, 255, 255));
        PVLB.setText("1.1.2018");
        PVLB.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        YlaPalkki.add(PVLB, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 20, 130, 30));

        ETEENPAINBTN.setBackground(new java.awt.Color(255, 255, 255));
        ETEENPAINBTN.setText(">>");
        ETEENPAINBTN.setEnabled(false);
        ETEENPAINBTN.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ETEENPAINBTNActionPerformed(evt);
            }
        });
        ETEENPAINBTN.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                ETEENPAINBTNKeyPressed(evt);
            }
        });
        YlaPalkki.add(ETEENPAINBTN, new org.netbeans.lib.awtextra.AbsoluteConstraints(470, 0, 60, 60));

        TAKAISINBTN.setBackground(new java.awt.Color(255, 255, 255));
        TAKAISINBTN.setText("<<");
        TAKAISINBTN.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TAKAISINBTNActionPerformed(evt);
            }
        });
        TAKAISINBTN.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                TAKAISINBTNKeyPressed(evt);
            }
        });
        YlaPalkki.add(TAKAISINBTN, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 60, 60));

        getContentPane().add(YlaPalkki, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 530, -1));

        MATERIAALITJAPALVELUTLB.setForeground(new java.awt.Color(0, 51, 255));
        MATERIAALITJAPALVELUTLB.setText("Materiaalit ja palvelut");
        Font font1 = MATERIAALITJAPALVELUTLB.getFont();
        Map attributes1 = font1.getAttributes();
        attributes1.put(TextAttribute.UNDERLINE, TextAttribute.UNDERLINE_ON);
        MATERIAALITJAPALVELUTLB.setFont(font1.deriveFont(attributes1));
        MATERIAALITJAPALVELUTLB.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        MATERIAALITJAPALVELUTLB.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                MATERIAALITJAPALVELUTLBMousePressed(evt);
            }
        });
        getContentPane().add(MATERIAALITJAPALVELUTLB, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 120, -1, -1));

        HENKILOSTOKULUTLB.setForeground(new java.awt.Color(0, 51, 255));
        HENKILOSTOKULUTLB.setText("Henkilöstökulut");
        Font font2 = HENKILOSTOKULUTLB.getFont();
        Map attributes2 = font2.getAttributes();
        attributes2.put(TextAttribute.UNDERLINE, TextAttribute.UNDERLINE_ON);
        HENKILOSTOKULUTLB.setFont(font2.deriveFont(attributes2));
        HENKILOSTOKULUTLB.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        HENKILOSTOKULUTLB.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                HENKILOSTOKULUTLBMousePressed(evt);
            }
        });
        getContentPane().add(HENKILOSTOKULUTLB, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 150, -1, -1));

        MUUTKULUTLB.setForeground(new java.awt.Color(0, 51, 255));
        MUUTKULUTLB.setText("Muut kulut");
        Font font3 = MUUTKULUT.getFont();
        Map attributes3 = font3.getAttributes();
        attributes3.put(TextAttribute.UNDERLINE, TextAttribute.UNDERLINE_ON);
        MUUTKULUTLB.setFont(font3.deriveFont(attributes3));
        MUUTKULUTLB.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        MUUTKULUTLB.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                MUUTKULUTLBMousePressed(evt);
            }
        });
        getContentPane().add(MUUTKULUTLB, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 180, -1, -1));

        RAHOITUSKULUTLB.setForeground(new java.awt.Color(0, 51, 255));
        RAHOITUSKULUTLB.setText("Rahoituskulut");
        RAHOITUSKULUTLB.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        Font font4 = RAHOITUSKULUTLB.getFont();
        Map attributes4 = font4.getAttributes();
        attributes4.put(TextAttribute.UNDERLINE, TextAttribute.UNDERLINE_ON);
        RAHOITUSKULUTLB.setFont(font4.deriveFont(attributes4));
        RAHOITUSKULUTLB.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                RAHOITUSKULUTLBMousePressed(evt);
            }
        });
        getContentPane().add(RAHOITUSKULUTLB, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 210, -1, -1));

        RAHOITUSKULUT.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        getContentPane().add(RAHOITUSKULUT, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 200, 90, 30));

        LIIKEVAIHTO.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        getContentPane().add(LIIKEVAIHTO, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 80, 90, 30));

        HENKILOSTOKULUT.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        getContentPane().add(HENKILOSTOKULUT, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 140, 90, 30));

        MATERIAALITJAPALVELUT.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        getContentPane().add(MATERIAALITJAPALVELUT, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 110, 90, 30));

        MUUTKULUT.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        getContentPane().add(MUUTKULUT, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 170, 90, 30));

        LIIKEVAIHTOLB.setForeground(new java.awt.Color(0, 51, 255));
        LIIKEVAIHTOLB.setText("Liikevaihto");
        Font font = LIIKEVAIHTOLB.getFont();
        Map attributes = font.getAttributes();
        attributes.put(TextAttribute.UNDERLINE, TextAttribute.UNDERLINE_ON);
        LIIKEVAIHTOLB.setFont(font.deriveFont(attributes));
        LIIKEVAIHTOLB.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        LIIKEVAIHTOLB.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                LIIKEVAIHTOLBMousePressed(evt);
            }
        });
        getContentPane().add(LIIKEVAIHTOLB, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 90, -1, -1));

        LAINANPAAOMALB.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        LAINANPAAOMALB.setText("Lainanpääoma");
        getContentPane().add(LAINANPAAOMALB, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 290, 80, 30));

        LAINANPAAOMA.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        getContentPane().add(LAINANPAAOMA, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 290, 90, 30));

        TULOS.setEditable(false);
        TULOS.setColumns(20);
        TULOS.setRows(5);
        TULOS.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                TULOSKeyPressed(evt);
            }
        });
        jScrollPane1.setViewportView(TULOS);

        getContentPane().add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 70, 260, 260));

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel1.setText("Kuukauden kertymä");
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 60, -1, -1));

        jLabel2.setFont(new java.awt.Font("Segoe UI", 0, 10)); // NOI18N
        jLabel2.setText("Kuukauden kertymä - Brandis© Yrityspelisimulaattori v1.0 ");
        getContentPane().add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 360, -1, -1));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void ETEENPAINBTNActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ETEENPAINBTNActionPerformed
        try {
            StringBuilder sp = new StringBuilder();
            pvanum = Double.parseDouble(PVLB.getText());
            boolean max = false;
            if(pvanum == minpaiva){
               TAKAISINBTN.setEnabled(true);
            }
            if(pvanum >11.9999){
                pvanum = pvanum + 0.0001 - 11;
            }else{
                pvanum = pvanum + 1;
            }
            pvanum = (double)Math.round(pvanum * 100000d) / 100000d;
            if(pvanum == maxpaiva){
                NYK.setText("Nykyinen kuukausi");
                ETEENPAINBTN.setEnabled(false);
		LIIKEVAIHTO.setText("0.00" +"€");
		MATERIAALITJAPALVELUT.setText("0.00" +"€");
		HENKILOSTOKULUT.setText("0.00" +"€");
		MUUTKULUT.setText("0.00" +"€");
		RAHOITUSKULUT.setText("0.00" +"€");
		LAINANPAAOMA.setText("0.00" +"€");
                TULOS.setText("--Kuukauden Infoa--");
                TULOS.append("\nTämän hetkinen kuukausi");
                max = true;
            }
            else{
                 NYK.setText("");
            }
            String text = Double.toString(Math.abs(pvanum));
            int integerPlaces = text.indexOf('.');
            int decimalPlaces = text.length() - integerPlaces - 1;
            System.out.println(decimalPlaces);
            if(decimalPlaces == 3){
                sp.append(pvanum);
                sp.append(0);
                System.out.println(sp);
                PVLB.setText(String.valueOf(sp));
            }
            else{
                PVLB.setText(String.valueOf(pvanum));
            }
            if(max == false){
            haetiedot();
            }
        } catch (ClassNotFoundException | SQLException ex) {
            Logger.getLogger(j4a_Tilastot.class.getName()).log(Level.SEVERE, null, ex);
        }
        
    }//GEN-LAST:event_ETEENPAINBTNActionPerformed

    private void TAKAISINBTNActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TAKAISINBTNActionPerformed
        try {
            // TODO add your handling code here:
            StringBuilder sp = new StringBuilder();
            pvanum = Double.parseDouble(PVLB.getText());
            if(pvanum == maxpaiva){
                ETEENPAINBTN.setEnabled(true);
            }
            if(pvanum <2){
                pvanum = pvanum - 0.0001 + 11;
            }else{
                pvanum = pvanum - 1;
            }
            pvanum = (double)Math.round(pvanum * 100000d) / 100000d;
            if(pvanum == 1.2018){
                TAKAISINBTN.setEnabled(false);
                NYK.setText("Aloitus kuukausi");
            }
            else{
                 NYK.setText("");
            }
            String text = Double.toString(Math.abs(pvanum));
            int integerPlaces = text.indexOf('.');
            int decimalPlaces = text.length() - integerPlaces - 1;
            System.out.println(decimalPlaces);
            if(decimalPlaces == 3){
                sp.append(pvanum);
                sp.append(0);
                System.out.println(sp);
                PVLB.setText(String.valueOf(sp));
            }
            else{
                PVLB.setText(String.valueOf(pvanum));
            }
            haetiedot();
            
        } catch (ClassNotFoundException | SQLException ex) {
            Logger.getLogger(j4a_Tilastot.class.getName()).log(Level.SEVERE, null, ex);
        }
        
    }//GEN-LAST:event_TAKAISINBTNActionPerformed

    private void OKBTNActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_OKBTNActionPerformed
        // TODO add your handling code here:
	j.tilastotavattu = false;
        UIManager.put("Button.foreground", Color.WHITE);
        this.dispose();
        //j.setFrame();
					
        
        
    }//GEN-LAST:event_OKBTNActionPerformed

    private void YlaPalkkiKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_YlaPalkkiKeyPressed
          if(evt.getKeyCode() == (KeyEvent.VK_RIGHT)){
                   ETEENPAINBTN.doClick();
                }
                if(evt.getKeyCode() == (KeyEvent.VK_LEFT)){
                    TAKAISINBTN.doClick();
                }
    }//GEN-LAST:event_YlaPalkkiKeyPressed

    private void TULOSKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_TULOSKeyPressed
        if(evt.getKeyCode() == (KeyEvent.VK_RIGHT)){
                   ETEENPAINBTN.doClick();
                }
                if(evt.getKeyCode() == (KeyEvent.VK_LEFT)){
                    TAKAISINBTN.doClick();
                }
    }//GEN-LAST:event_TULOSKeyPressed

    private void ETEENPAINBTNKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_ETEENPAINBTNKeyPressed
if(evt.getKeyCode() == (KeyEvent.VK_RIGHT)){
                   ETEENPAINBTN.doClick();
                }
                if(evt.getKeyCode() == (KeyEvent.VK_LEFT)){
                    TAKAISINBTN.doClick();
                }        // TODO add your handling code here:
    }//GEN-LAST:event_ETEENPAINBTNKeyPressed

    private void TAKAISINBTNKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_TAKAISINBTNKeyPressed
                if(evt.getKeyCode() == (KeyEvent.VK_RIGHT)){
                   ETEENPAINBTN.doClick();
                }
                if(evt.getKeyCode() == (KeyEvent.VK_LEFT)){
                    TAKAISINBTN.doClick();
                }        // TODO add your handling code here:
    }//GEN-LAST:event_TAKAISINBTNKeyPressed

    private void LIIKEVAIHTOLBMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_LIIKEVAIHTOLBMousePressed
        try {
            // TODO add your handling code here:
            
            Connection con = jd.getConnection();//Hakee yhteyden SQL-kantaan
            Statement stm = con.createStatement();
            ResultSet rs = stm.executeQuery("SELECT * FROM TMtilastot where paiva = "+Double.valueOf(PVLB.getText())+" AND yrnim ='"+YRNIM+"' AND palkka = 0");
            TULOS.setText("--Liikevaihdon sisältö--");
            while(rs.next()){
                if(rs.getDouble("ostohinta") > 0){
                TULOS.append("\nTuotteen nimi: "+ rs.getString("nimi"));
                TULOS.append("\nMyyntimäärä: " + rs.getInt("myyntimaara"));
                TULOS.append("\nMyyntihinta: " + j.roundaaS(rs.getDouble("myyntihinta")) +"€");
                int havikki = rs.getInt("maara") - rs.getInt("myyntimaara");
                if(havikki > 0 && !rs.getString("nimi").equals("Näkkileipä")){
                TULOS.append("\nHävikki : "+ havikki + " kpl.");
                }
                TULOS.append("\n------------------");
                }
            }
            con.close();
        } catch (ClassNotFoundException | SQLException ex) {
            Logger.getLogger(j4a_Tilastot.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        
        
    }//GEN-LAST:event_LIIKEVAIHTOLBMousePressed

    private void MATERIAALITJAPALVELUTLBMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_MATERIAALITJAPALVELUTLBMousePressed
        try {
            // TODO add your handling code here:
            Connection con = jd.getConnection();//Hakee yhteyden SQL-kantaan
            Statement stm = con.createStatement();
            ResultSet rs = stm.executeQuery("SELECT * FROM TMtilastot where paiva = "+Double.valueOf(PVLB.getText())+" AND yrnim ='"+YRNIM+"' AND palkka = 0");
            TULOS.setText("--Materiaalejen ja palveluiden sisältö--");
            while(rs.next()){
                if(rs.getDouble("ostohinta") > 0 && !rs.getString("nimi").equals("Näkkileipä")){
                    TULOS.append("\nTuotteen nimi: "+ rs.getString("nimi"));
                    TULOS.append("\nMäärä: " + rs.getInt("maara"));
                    TULOS.append("\nOstohinta: " + j.roundaaS(rs.getInt("Ostohinta")) +"€");
                    TULOS.append("\n------------------");
                }else{
                    if(rs.getInt("ostomaara") > 0){
                        TULOS.append("\nTuotteen nimi: "+ rs.getString("nimi"));
                        TULOS.append("\nOstomäärä: " + rs.getInt("ostomaara"));
                        TULOS.append("\nMäärä: " + rs.getInt("maara"));
                        TULOS.append("\nOstohinta: " + j.roundaaS(rs.getInt("Ostohinta")) +"€");
                        TULOS.append("\n------------------");
                    }
                }
            }
            con.close();
        } catch (ClassNotFoundException | SQLException ex) {
            Logger.getLogger(j4a_Tilastot.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_MATERIAALITJAPALVELUTLBMousePressed

    private void HENKILOSTOKULUTLBMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_HENKILOSTOKULUTLBMousePressed
        try {
            // TODO add your handling code here:
            Connection con = jd.getConnection();//Hakee yhteyden SQL-kantaan
            Statement stm = con.createStatement();
            double sivukulut;
            sivukulut = 0.0;
            TULOS.setText("--Henkilösto kulujen sisältö--");
            ResultSet rs = stm.executeQuery("SELECT * FROM tilastot where paiva = "+Double.valueOf(PVLB.getText())+" AND yrnim ='"+YRNIM+"'");
            if(rs.next()){
                    TULOS.append("\nOmistajan palkka");
                    TULOS.append("\nPalkka: " + j.roundaaS(rs.getInt("omistajanpalkka")) +"€");
                    TULOS.append("\n------------------");
                    sivukulut = rs.getDouble("palkkojensivukulut");
            }
            rs = stm.executeQuery("SELECT * FROM TMtilastot where paiva = "+Double.valueOf(PVLB.getText())+" AND yrnim ='"+YRNIM+"'");
            while(rs.next()){
                if(rs.getDouble("palkka") > 0 && !rs.getString("nimi").equals("Omistaja")){
                    TULOS.append("\nMyyjän nimi: "+ rs.getString("nimi"));
                    TULOS.append("\nPalkka: " + j.roundaaS(rs.getInt("palkka")) +"€");
                    TULOS.append("\n------------------");
                }
            }
            TULOS.append("\nPalkkojen sivukulut: " + j.roundaaS(sivukulut) +"€");
            con.close();
        } catch (SQLException | ClassNotFoundException ex) {
            Logger.getLogger(j4a_Tilastot.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_HENKILOSTOKULUTLBMousePressed

    private void MUUTKULUTLBMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_MUUTKULUTLBMousePressed
        try {
            // TODO add your handling code here:
            Connection con = jd.getConnection();//Hakee yhteyden SQL-kantaan
            Statement stm = con.createStatement();
            ResultSet rs = stm.executeQuery("SELECT * FROM tilastot where paiva = "+Double.valueOf(PVLB.getText())+" AND yrnim ='"+YRNIM+"'");
            TULOS.setText("--Muitten kulujen sisältö--");
            if(rs.next()){
                    TULOS.append("\nVesi: "+ j.roundaaS(rs.getDouble("vesi")) +"€");
                    TULOS.append("\nSähkö: " + j.roundaaS(rs.getDouble("sahko")) +"€");
                    TULOS.append("\nTietoliikenne: "+ j.roundaaS(rs.getDouble("tietoliikenne")) +"€");
                    TULOS.append("\nVuokra: " + j.roundaaS(rs.getDouble("vuokra")) +"€");
                    TULOS.append("\nKuljetus: "+ j.roundaaS(rs.getDouble("kuljetus")) +"€");
                    TULOS.append("\nHuolto: " + j.roundaaS(rs.getDouble("huolto")) +"€");
                    TULOS.append("\nTaloushallinto: "+ j.roundaaS(rs.getDouble("taloushallinto")) +"€");
                    TULOS.append("\nHyväntekevaisyys: " + j.roundaaS(rs.getDouble("hyvantekevaisuus")) +"€");
            }
            con.close();
        } catch (ClassNotFoundException | SQLException ex) {
            Logger.getLogger(j4a_Tilastot.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_MUUTKULUTLBMousePressed

    private void RAHOITUSKULUTLBMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_RAHOITUSKULUTLBMousePressed
        try {
            // TODO add your handling code here:
            Connection con = jd.getConnection();//Hakee yhteyden SQL-kantaan
            Statement stm = con.createStatement();
            ResultSet rs = stm.executeQuery("SELECT * FROM tilastot where paiva = "+Double.valueOf(PVLB.getText())+" AND yrnim ='"+YRNIM+"'");
            TULOS.setText("--Rahoituskulujen sisältö--");
            if(rs.next()){
                TULOS.append("\nLainankorko: "+ j.roundaaS(rs.getDouble("lainanmaksut")) +"€");
            }
            con.close();
        } catch (ClassNotFoundException | SQLException ex) {
            Logger.getLogger(j4a_Tilastot.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_RAHOITUSKULUTLBMousePressed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
								
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Windows".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(j4a_Tilastot.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(j4a_Tilastot.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(j4a_Tilastot.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(j4a_Tilastot.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new j4a_Tilastot().setVisible(true);
            }
        });
    }
    public void paivita() throws ClassNotFoundException, SQLException{
        Connection con = jd.getConnection();//Hakee yhteyden SQL-kantaan
        Statement stm = con.createStatement();
        int kk = 0;
        int v = 0;
        double pv = 0.0;
        System.out.println("YRITUKSAF" + YRNIM);
        ResultSet rs = stm.executeQuery("SELECT * FROM pelaajat where nimi='"+YRNIM+"'");
            while(rs.next()){
                kk = rs.getInt("kk");
                v = rs.getInt("v");
            }
            
        rs = stm.executeQuery("SELECT * FROM tilastot where yrnim = '"+YRNIM+"'");
            while(rs.next()){
                pvamaara++;
            }
        System.out.println("Päivien määrä on " + pvamaara);
        
        
        StringBuilder sp = new StringBuilder();
        sp.append(kk);
        sp.append(".");  
        sp.append(v);
        System.out.println(sp);
        PVLB.setText(String.valueOf(sp));
        maxpaiva = Double.valueOf(String.valueOf(sp));
        if(PVLB.getText().equals("1.2018")){
                System.out.println("Takaisin nappi sammutettu");
                TAKAISINBTN.setEnabled(false);
        }
        else{
                System.out.println("Takaisin nappi käynnistetty");
                TAKAISINBTN.setEnabled(true);
                ETEENPAINBTN.setEnabled(false);
        }
        con.close();
        haetamantiedot();
    }
    
    public void haetiedot() throws ClassNotFoundException, SQLException{
        Connection con = jd.getConnection();//Hakee yhteyden SQL-kantaan
        Statement stm = con.createStatement();
        ResultSet rs = stm.executeQuery("SELECT * FROM tilastot where paiva = "+Double.valueOf(PVLB.getText())+" AND yrnim ='"+YRNIM+"'");
            if(rs.next()){
                
                double palkka = rs.getDouble("myyjienpalkat")+rs.getDouble("palkkojensivukulut");
                palkka = Math.round(palkka * 100000d) / 100000d;
                KASSA.setText(String.valueOf(j.roundaaS(rs.getDouble("kassa"))) +"€");
		LIIKEVAIHTO.setText(String.valueOf(j.roundaaS(rs.getDouble("tapahtunutmyynti"))) +"€");
		MATERIAALITJAPALVELUT.setText(String.valueOf(j.roundaaS(rs.getDouble("tuotteidenostohinta"))) +"€");
		HENKILOSTOKULUT.setText(String.valueOf(j.roundaaS((rs.getDouble("myyjienpalkat") + rs.getDouble("omistajanpalkka")))) +"€");
                double muutkulut =(rs.getDouble("markkinointikulut") + rs.getDouble("vesi") + rs.getDouble("sahko") + rs.getDouble("tietoliikenne") + rs.getDouble("vuokra") +rs.getDouble("kuljetus") + rs.getDouble("huolto") + rs.getDouble("taloushallinto") + rs.getDouble("hyvantekevaisuus"));
                MUUTKULUT.setText(String.valueOf(j.roundaaS(muutkulut))+"€");
		RAHOITUSKULUT.setText(String.valueOf(j.roundaaS(rs.getDouble("lainanmaksut"))) +"€");
		LAINANPAAOMA.setText(String.valueOf(j.roundaaS(rs.getDouble("lainanpaaoma"))) +"€");
                TULOS.setText("--Kuukauden Infoa--");
                palkka = rs.getDouble("myyjienpalkat") - rs.getDouble("omistajanpalkka");
                palkka = Math.round(palkka * 100000d) / 100000d; 
                TULOS.append("\nMyyjien palkat: " + j.roundaaS(palkka) +"€");
                TULOS.append("\nHyväntekeväisyys: "+ j.roundaaS(rs.getDouble("hyvantekevaisuus")) +"€");
                TULOS.append("\nOmistajan palkka: "+ j.roundaaS(rs.getDouble("omistajanpalkka")) +"€");
            }
            
            
            
        con.close();
    }
     public void haetamantiedot() throws ClassNotFoundException, SQLException{
        Connection con = jd.getConnection();//Hakee yhteyden SQL-kantaan
        Statement stm = con.createStatement();
        NYK.setText("Nykyinen kuukausi");
        
        ResultSet rs = stm.executeQuery("SELECT * FROM pelaajat where nimi = '"+YRNIM+"'");
            if(rs.next()){
                KASSA.setText(String.valueOf(rs.getDouble("kassa")) +"€");
		LIIKEVAIHTO.setText("0.00" +"€");
		MATERIAALITJAPALVELUT.setText("0.00" +"€");
		HENKILOSTOKULUT.setText("0.00" +"€");
		MUUTKULUT.setText("0.00" +"€");
		RAHOITUSKULUT.setText("0.00" +"€");
		LAINANPAAOMA.setText("0.00" +"€");
            }
        con.close();
    }
					private void Palkki() {    
    
         YlaPalkki.addMouseListener(new MouseListener() {
            
            @Override
            public void mouseReleased(MouseEvent e) {
                compCoords = null;
									ji.getRootPane().setBorder(BorderFactory.createLineBorder(new Color(12, 143, 222)));						
            }

           
            @Override
            public void mousePressed(MouseEvent e) {
                compCoords = e.getPoint();
                ji.getRootPane().setBorder(BorderFactory.createLineBorder(Color.ORANGE));
																
            }

           
            @Override
            public void mouseExited(MouseEvent e) {
            }

            
            @Override
            public void mouseEntered(MouseEvent e) {
            }

            
            @Override
            public void mouseClicked(MouseEvent e) {
            }
        });
       YlaPalkki.addMouseMotionListener(new MouseMotionListener() {
            @Override
            public void mouseMoved(MouseEvent e) {
            }

            @Override
            public void mouseDragged(MouseEvent e) {
                Point currCoords = e.getLocationOnScreen();
                ji.setLocation(currCoords.x - compCoords.x, currCoords.y - compCoords.y);
                
            }
        });
       
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton ETEENPAINBTN;
    private javax.swing.JLabel HENKILOSTOKULUT;
    private javax.swing.JLabel HENKILOSTOKULUTLB;
    private javax.swing.JLabel KASSA;
    private javax.swing.JLabel KASSALB;
    private javax.swing.JLabel LAINANPAAOMA;
    private javax.swing.JLabel LAINANPAAOMALB;
    private javax.swing.JLabel LIIKEVAIHTO;
    private javax.swing.JLabel LIIKEVAIHTOLB;
    private javax.swing.JLabel MATERIAALITJAPALVELUT;
    private javax.swing.JLabel MATERIAALITJAPALVELUTLB;
    private javax.swing.JLabel MUUTKULUT;
    private javax.swing.JLabel MUUTKULUTLB;
    private javax.swing.JLabel NYK;
    private javax.swing.JButton OKBTN;
    private javax.swing.JLabel PVLB;
    private javax.swing.JLabel RAHOITUSKULUT;
    private javax.swing.JLabel RAHOITUSKULUTLB;
    public static javax.swing.JButton TAKAISINBTN;
    private javax.swing.JTextArea TULOS;
    private javax.swing.JPanel YlaPalkki;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables
}
